# ==========================================
# Collide 认证系统性能优化配置
# 解决登录注册5-7秒延迟问题
# ==========================================

# Dubbo性能优化配置
dubbo:
  protocol:
    name: dubbo
    port: -1
    # 优化序列化性能
    serialization: kryo  # 使用Kryo替代默认序列化，提升30%性能
    # 连接池优化
    accepts: 1000
    threads: 200
    # 网络优化
    payload: 8388608  # 8MB
    buffer: 8192
    heartbeat: 60000
    # 性能监控
    parameters:
      optimizer: com.alibaba.dubbo.common.serialize.support.SerializationOptimizer
  consumer:
    # 超时优化
    timeout: 5000  # 从10秒优化到5秒
    retries: 1     # 减少重试次数
    # 连接优化
    connections: 10
    lazy: true
    # 负载均衡
    loadbalance: leastactive
    # 容错机制
    cluster: failfast
  provider:
    # 线程池优化
    threads: 200
    threadpool: cached
    # 超时设置
    timeout: 3000
    # 延迟暴露
    delay: -1

# JetCache性能优化配置
jetcache:
  statIntervalMinutes: 15
  areaInCacheName: false
  # 本地缓存优化
  local:
    default:
      type: caffeine
      keyConvertor: fastjson2
      valueEncoder: kryo
      valueDecoder: kryo
      expireAfterWriteInMillis: 300000  # 5分钟
      expireAfterAccessInMillis: 180000 # 3分钟
      limit: 10000
      # 性能优化参数
      maximumSize: 10000
      refreshAheadTimeInMillis: 60000   # 提前1分钟刷新
  # 远程缓存优化
  remote:
    default:
      type: redis.lettuce
      keyConvertor: fastjson2
      valueEncoder: kryo
      valueDecoder: kryo
      expireAfterWriteInMillis: 1800000 # 30分钟
      # Redis连接池优化
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
        maxWaitMillis: 3000
      # 序列化优化
      broadcastChannel: jetcache-broadcast
      keyPrefix: "collide:auth:"

# 数据库连接池优化（HikariCP）
spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      # 连接池大小优化
      minimum-idle: 10
      maximum-pool-size: 50
      # 连接超时优化
      connection-timeout: 10000     # 10秒
      idle-timeout: 300000          # 5分钟
      max-lifetime: 1800000         # 30分钟
      # 性能优化参数
      leak-detection-threshold: 60000  # 1分钟泄露检测
      validation-timeout: 3000
      connection-test-query: SELECT 1
      # 缓存优化
      cachePrepStmts: true
      prepStmtCacheSize: 500
      prepStmtCacheSqlLimit: 2048
      useServerPrepStmts: true
      useLocalSessionState: true
      rewriteBatchedStatements: true
      maintainTimeStats: false

# MyBatis性能优化配置
mybatis:
  configuration:
    # 缓存优化
    cache-enabled: true
    lazy-loading-enabled: true
    aggressive-lazy-loading: false
    multiple-result-sets-enabled: true
    use-generated-keys: true
    use-column-label: true
    auto-mapping-behavior: partial
    auto-mapping-unknown-column-behavior: warning
    default-executor-type: reuse
    default-statement-timeout: 25
    default-fetch-size: 100
    safe-row-bounds-enabled: false
    map-underscore-to-camel-case: true
    local-cache-scope: session
    jdbc-type-for-null: other
    # 性能优化参数
    call-setters-on-nulls: false
    return-instance-for-empty-row: false
    log-prefix: '[MyBatis] '
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl

# Spring Boot性能优化
server:
  # Tomcat优化
  tomcat:
    threads:
      max: 200
      min-spare: 20
    max-connections: 8192
    accept-count: 100
    connection-timeout: 10000
    # 压缩优化
    compression:
      enabled: true
      mime-types: application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
      min-response-size: 1024
  # HTTP/2支持
  http2:
    enabled: true

# 日志性能优化
logging:
  level:
    com.gig.collide.auth: INFO
    com.gig.collide.users: INFO
    com.alibaba.dubbo: WARN
    com.alicp.jetcache: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  config: classpath:logback-spring.xml

# JVM性能优化建议（在启动脚本中使用）
jvm:
  options: |
    -server
    -Xms2g -Xmx2g
    -XX:+UseG1GC
    -XX:MaxGCPauseMillis=100
    -XX:+UseStringDeduplication
    -XX:+OptimizeStringConcat
    -XX:+UseCompressedOops
    -XX:+UseCompressedClassPointers
    -Djava.awt.headless=true
    -Dfile.encoding=UTF-8
    -Dsun.jnu.encoding=UTF-8
    -Djava.security.egd=file:/dev/./urandom
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:HeapDumpPath=/logs/heapdump.hprof
    -XX:+PrintGCDetails
    -XX:+PrintGCTimeStamps
    -Xloggc:/logs/gc.log

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,dubbo
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
      sla:
        http.server.requests: 100ms, 500ms, 1s, 2s

# 认证缓存策略优化
auth:
  cache:
    # 登录结果缓存（短期，避免重复密码验证）
    login-result:
      expire: 300  # 5分钟
      max-size: 10000
    # 用户基础信息缓存（长期）
    user-basic:
      expire: 1800  # 30分钟
      max-size: 50000
    # 用户状态缓存（中期）
    user-status:
      expire: 600   # 10分钟
      max-size: 20000
  # 性能监控阈值
  performance:
    slow-query-threshold: 500  # 慢查询阈值：500ms
    timeout-threshold: 3000    # 超时阈值：3秒
    max-retry: 2               # 最大重试次数
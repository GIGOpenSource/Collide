# Docker Bridge网络模式配置 - Gateway服务专用
# 注意：此文件与 bootstrap-host.yml 配合使用

spring:
  # Spring Boot Redis配置 (Gateway服务需要Redis用于Sa-Token和健康检查)
  data:
    redis:
      host: ${REDIS_HOST:192.168.1.107}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:123456}
      ssl:
        enabled: false
  # Redisson配置 (Gateway使用Redisson进行Redis操作)
  redis:
    redisson:
      config: |
        singleServerConfig:
          idleConnectionTimeout: 10000
          connectTimeout: 10000
          timeout: 3000
          retryAttempts: 3
          retryInterval: 1500
          password: ${REDIS_PASSWORD:123456}
          subscriptionsPerConnection: 5
          clientName: null
          address: "redis://${REDIS_HOST:192.168.1.107}:${REDIS_PORT:6379}"
          subscriptionConnectionMinimumIdleSize: 1
          subscriptionConnectionPoolSize: 50
          connectionMinimumIdleSize: 24
          connectionPoolSize: 64
          database: 0
          dnsMonitoringInterval: 5000
        threads: 16
        nettyThreads: 32
        codec: !<org.redisson.client.codec.StringCodec> {}
        transportMode: "NIO"
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_URL:192.168.1.107:8848}
        username: ${NACOS_USERNAME:nacos}
        password: ${NACOS_PASSWORD:nacos}
      config:
        server-addr: ${NACOS_URL:192.168.1.107:8848}
        username: ${NACOS_USERNAME:nacos}
        password: ${NACOS_PASSWORD:nacos}
    # Gateway路由配置
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin, RETAIN_UNIQUE
      globalcors:
        cors-configurations:
          '[/**]':
            allowedHeaders: '*'
            allowedMethods: '*'
            allowedOriginPatterns: '*'
            allowCredentials: true
            maxAge: 3600
      routes:
        # 认证服务路由 - 关键路径重写配置
        - id: collide-auth
          uri: lb://collide-auth
          predicates:
            - Path=/api/v1/auth/**, /api/v1/token/**


        # 业务服务路由
        - id: collide-application
          uri: lb://collide-business
          predicates:
            - Path=/api/v1/users/**,/api/v1/follow/**,/api/v1/comments/**,/api/v1/content/**

      # 全局过滤器配置
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

# Collide项目自定义配置 - Gateway基础配置
collide:
  turbo:
    nacos:
      server:
        url: ${NACOS_URL:192.168.1.107:8848}
        username: ${NACOS_USERNAME:nacos}
        password: ${NACOS_PASSWORD:nacos}
    # Redis配置 (Gateway使用Sa-Token需要Redis)
    redis:
      url: ${REDIS_HOST:192.168.1.107}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:123456}
    sentinel:
      url: ${SENTINEL_URL:192.168.1.107}
      port: ${SENTINEL_PORT:8888}
      nacos:
        data-id: ${SENTINEL_NACOS_DATA_ID:collide-gateway-sentinel}

# 日志配置
logging:
  level:
    root: ${LOG_LEVEL:INFO}
    com.gig.collide: ${APP_LOG_LEVEL:DEBUG}
  file:
    path: /app/logs
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"

# 管理端点配置
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  server:
    port: ${MANAGEMENT_PORT:${server.port}}

# 服务端口配置
server:
  port: ${SERVER_PORT:9501} 
# Docker环境配置
spring:
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:mysql}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:collide_db}?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: ${MYSQL_USERNAME:collide}
    password: ${MYSQL_PASSWORD:collide123456}
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      pool-name: CollideHikariCP
      minimum-idle: 5
      maximum-pool-size: 20
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:redis123456}
    timeout: 6000ms
    lettuce:
      pool:
        max-active: 20
        max-wait: -1ms
        max-idle: 10
        min-idle: 0

  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_SERVER_ADDR:nacos:8848}
        username: ${NACOS_SERVER_USERNAME:nacos}
        password: ${NACOS_SERVER_PASSWORD:nacos}
        group: DEFAULT_GROUP
        cluster-name: docker
        metadata:
          version: 1.0.0
          environment: docker
      config:
        server-addr: ${NACOS_SERVER_ADDR:nacos:8848}
        username: ${NACOS_SERVER_USERNAME:nacos}
        password: ${NACOS_SERVER_PASSWORD:nacos}
        group: DEFAULT_GROUP

# Dubbo配置
dubbo:
  registry:
    address: nacos://${NACOS_SERVER_ADDR:nacos:8848}
    username: ${NACOS_SERVER_USERNAME:nacos}
    password: ${NACOS_SERVER_PASSWORD:nacos}
    parameters:
      namespace: b8bca988-2d8a-4d2b-a9a0-c26127e345bc
  protocols:
    dubbo:
      name: dubbo
      port: 22223
      host: ${DUBBO_HOST:}
  provider:
    timeout: 10000
    retries: 0
    loadbalance: roundrobin
  consumer:
    timeout: 10000
    retries: 0
    check: false

# 日志配置
logging:
  level:
    root: INFO
    com.gig.collide: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.apache.dubbo: INFO
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n'
  file:
    name: /app/logs/application.log
    max-size: 100MB
    max-history: 30

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true 
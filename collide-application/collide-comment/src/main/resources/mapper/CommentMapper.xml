<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gig.collide.comment.infrastructure.mapper.CommentMapper">

    <!-- 基础字段映射 -->
    <sql id="Base_Column_List">
        id, comment_type, target_id, parent_comment_id, content, user_id, user_nickname, user_avatar,
        reply_to_user_id, reply_to_user_nickname, reply_to_user_avatar, like_count, reply_count,
        status, create_time, update_time
    </sql>

    <!-- =================== 基础查询 =================== -->

    <!-- 根据目标ID分页查询评论 -->
    <select id="selectTargetCommentsPage" resultType="com.gig.collide.comment.domain.entity.Comment">
        SELECT <include refid="Base_Column_List"/>
        FROM t_comment
        WHERE target_id = #{targetId}
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        <if test="parentCommentId != null">
            AND parent_comment_id = #{parentCommentId}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="!includeDeleted">
            AND status != 'DELETED'
        </if>
        <choose>
            <when test="orderBy == 'like_count'">
                ORDER BY like_count DESC, create_time DESC
            </when>
            <when test="orderBy == 'reply_count'">
                ORDER BY reply_count DESC, create_time DESC
            </when>
            <when test="orderBy == 'update_time'">
                ORDER BY update_time DESC
            </when>
            <otherwise>
                ORDER BY create_time DESC
            </otherwise>
        </choose>
    </select>

    <!-- 根据用户ID分页查询评论 -->
    <select id="selectUserCommentsPage" resultType="com.gig.collide.comment.domain.entity.Comment">
        SELECT <include refid="Base_Column_List"/>
        FROM t_comment
        WHERE user_id = #{userId}
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="!includeDeleted">
            AND status != 'DELETED'
        </if>
        ORDER BY create_time DESC
    </select>

    <!-- 根据用户ID分页查询回复 -->
    <select id="selectUserRepliesPage" resultType="com.gig.collide.comment.domain.entity.Comment">
        SELECT <include refid="Base_Column_List"/>
        FROM t_comment
        WHERE reply_to_user_id = #{userId}
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="!includeDeleted">
            AND status != 'DELETED'
        </if>
        ORDER BY create_time DESC
    </select>

    <!-- 搜索评论 -->
    <select id="searchComments" resultType="com.gig.collide.comment.domain.entity.Comment">
        SELECT <include refid="Base_Column_List"/>
        FROM t_comment
        WHERE 1=1
        <if test="keyword != null and keyword != ''">
            AND content LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        <if test="targetId != null">
            AND target_id = #{targetId}
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="!includeDeleted">
            AND status != 'DELETED'
        </if>
        ORDER BY create_time DESC
    </select>

    <!-- 获取热门评论 -->
    <select id="selectPopularComments" resultType="com.gig.collide.comment.domain.entity.Comment">
        SELECT <include refid="Base_Column_List"/>
        FROM t_comment
        WHERE 1=1
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        <if test="targetId != null">
            AND target_id = #{targetId}
        </if>
        <if test="parentCommentId != null">
            AND parent_comment_id = #{parentCommentId}
        </if>
        AND status = 'NORMAL'
        AND like_count > 0
        ORDER BY (like_count * 0.7 + reply_count * 0.3) DESC, create_time DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 获取最新评论 -->
    <select id="selectLatestComments" resultType="com.gig.collide.comment.domain.entity.Comment">
        SELECT <include refid="Base_Column_List"/>
        FROM t_comment
        WHERE 1=1
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        <if test="targetId != null">
            AND target_id = #{targetId}
        </if>
        <if test="parentCommentId != null">
            AND parent_comment_id = #{parentCommentId}
        </if>
        AND status = 'NORMAL'
        ORDER BY create_time DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 获取评论树形结构 -->
    <select id="selectCommentTree" resultType="com.gig.collide.comment.domain.entity.Comment">
        WITH RECURSIVE comment_tree AS (
            -- 获取根评论
            SELECT <include refid="Base_Column_List"/>, 0 as level
            FROM t_comment
            WHERE target_id = #{targetId}
            <if test="commentType != null and commentType != ''">
                AND comment_type = #{commentType}
            </if>
            AND parent_comment_id = 0
            AND status = 'NORMAL'
            
            UNION ALL
            
            -- 递归获取子评论
            SELECT c.<include refid="Base_Column_List"/>, ct.level + 1
            FROM t_comment c
            INNER JOIN comment_tree ct ON c.parent_comment_id = ct.id
            WHERE c.status = 'NORMAL'
            <if test="maxDepth != null">
                AND ct.level &lt; #{maxDepth}
            </if>
        )
        SELECT <include refid="Base_Column_List"/>
        FROM comment_tree
        ORDER BY level ASC, create_time ASC
    </select>

    <!-- =================== 统计查询 =================== -->

    <!-- 统计目标评论数量 -->
    <select id="countTargetComments" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM t_comment
        WHERE target_id = #{targetId}
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        <if test="parentCommentId != null">
            AND parent_comment_id = #{parentCommentId}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="!includeDeleted">
            AND status != 'DELETED'
        </if>
    </select>

    <!-- 统计用户评论数量 -->
    <select id="countUserComments" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM t_comment
        WHERE user_id = #{userId}
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="!includeDeleted">
            AND status != 'DELETED'
        </if>
    </select>

    <!-- 获取评论统计信息 -->
    <select id="selectCommentStatistics" resultType="java.util.Map">
        SELECT 
            COUNT(*) as total_count,
            SUM(CASE WHEN status = 'NORMAL' THEN 1 ELSE 0 END) as normal_count,
            SUM(CASE WHEN status = 'HIDDEN' THEN 1 ELSE 0 END) as hidden_count,
            SUM(CASE WHEN status = 'DELETED' THEN 1 ELSE 0 END) as deleted_count,
            SUM(like_count) as total_like_count,
            SUM(reply_count) as total_reply_count,
            AVG(like_count) as avg_like_count,
            MAX(like_count) as max_like_count,
            COUNT(DISTINCT user_id) as unique_user_count
        FROM t_comment
        WHERE 1=1
        <if test="targetId != null">
            AND target_id = #{targetId}
        </if>
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <if test="startTime != null">
            AND create_time >= #{startTime}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime}
        </if>
    </select>

    <!-- =================== 更新操作 =================== -->

    <!-- 增加点赞数量 -->
    <update id="increaseLikeCount">
        UPDATE t_comment
        SET like_count = like_count + #{increment},
            update_time = NOW()
        WHERE id = #{commentId}
    </update>

    <!-- 增加回复数量 -->
    <update id="increaseReplyCount">
        UPDATE t_comment
        SET reply_count = reply_count + #{increment},
            update_time = NOW()
        WHERE id = #{commentId}
    </update>

    <!-- 批量更新评论状态 -->
    <update id="batchUpdateStatus">
        UPDATE t_comment
        SET status = #{status},
            update_time = NOW()
        WHERE id IN
        <foreach collection="commentIds" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <!-- 更新用户信息 -->
    <update id="updateUserInfo">
        UPDATE t_comment
        SET user_nickname = #{userNickname},
            user_avatar = #{userAvatar},
            update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 批量删除目标评论 -->
    <update id="batchDeleteTargetComments">
        UPDATE t_comment
        SET status = 'DELETED',
            update_time = NOW()
        WHERE target_id = #{targetId}
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        AND status != 'DELETED'
    </update>

    <!-- =================== 清理操作 =================== -->

    <!-- 清理已删除的评论 -->
    <delete id="cleanDeletedComments">
        DELETE FROM t_comment
        WHERE status = 'DELETED'
        AND update_time &lt; DATE_SUB(NOW(), INTERVAL #{days} DAY)
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </delete>

    <!-- =================== 高级查询 =================== -->

    <!-- 根据时间范围查询评论 -->
    <select id="selectCommentsByTimeRange" resultType="com.gig.collide.comment.domain.entity.Comment">
        SELECT <include refid="Base_Column_List"/>
        FROM t_comment
        WHERE 1=1
        <if test="startTime != null">
            AND create_time >= #{startTime}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime}
        </if>
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        <if test="targetId != null">
            AND target_id = #{targetId}
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="!includeDeleted">
            AND status != 'DELETED'
        </if>
        ORDER BY create_time DESC
    </select>

    <!-- 根据点赞数范围查询评论 -->
    <select id="selectCommentsByLikeCountRange" resultType="com.gig.collide.comment.domain.entity.Comment">
        SELECT <include refid="Base_Column_List"/>
        FROM t_comment
        WHERE 1=1
        <if test="minLikeCount != null">
            AND like_count >= #{minLikeCount}
        </if>
        <if test="maxLikeCount != null">
            AND like_count &lt;= #{maxLikeCount}
        </if>
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        <if test="targetId != null">
            AND target_id = #{targetId}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="!includeDeleted">
            AND status != 'DELETED'
        </if>
        ORDER BY like_count DESC, create_time DESC
    </select>

    <!-- 查询待审核评论 -->
    <select id="selectPendingComments" resultType="com.gig.collide.comment.domain.entity.Comment">
        SELECT <include refid="Base_Column_List"/>
        FROM t_comment
        WHERE status = 'PENDING'
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        ORDER BY create_time ASC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 查询用户的回复关系 -->
    <select id="selectUserReplyRelations" resultType="java.util.Map">
        SELECT 
            user_id,
            user_nickname,
            reply_to_user_id,
            reply_to_user_nickname,
            COUNT(*) as reply_count
        FROM t_comment
        WHERE reply_to_user_id IS NOT NULL
        AND reply_to_user_id != 0
        <if test="userId != null">
            AND (user_id = #{userId} OR reply_to_user_id = #{userId})
        </if>
        <if test="startTime != null">
            AND create_time >= #{startTime}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime}
        </if>
        AND status = 'NORMAL'
        GROUP BY user_id, user_nickname, reply_to_user_id, reply_to_user_nickname
        ORDER BY reply_count DESC
    </select>

    <!-- 查询评论热度排行 -->
    <select id="selectCommentHotRanking" resultType="java.util.Map">
        SELECT 
            id,
            content,
            user_id,
            user_nickname,
            like_count,
            reply_count,
            (like_count * 0.7 + reply_count * 0.3) as hot_score,
            create_time
        FROM t_comment
        WHERE 1=1
        <if test="commentType != null and commentType != ''">
            AND comment_type = #{commentType}
        </if>
        <if test="targetId != null">
            AND target_id = #{targetId}
        </if>
        <if test="startTime != null">
            AND create_time >= #{startTime}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime}
        </if>
        AND status = 'NORMAL'
        AND (like_count > 0 OR reply_count > 0)
        ORDER BY hot_score DESC, create_time DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

</mapper>
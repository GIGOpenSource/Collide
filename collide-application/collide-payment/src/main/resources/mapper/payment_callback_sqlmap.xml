<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gig.collide.payment.infrastructure.mapper.PaymentCallbackMapper">
    <!-- Generate by Collide Team Date: 2024-01-27 去连表设计 v2.0.0 -->

    <resultMap id="paymentCallbackMap" type="com.gig.collide.payment.infrastructure.entity.PaymentCallback">
        <!-- 基础字段 -->
        <result property="id" column="id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="deleted" column="deleted"/>
        <result property="version" column="version"/>

        <!-- 关联信息 -->
        <result property="paymentRecordId" column="payment_record_id"/>

        <!-- 冗余支付信息（避免联表查询）-->
        <result property="internalTransactionNo" column="internal_transaction_no"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="payAmount" column="pay_amount"/>
        <result property="payType" column="pay_type"/>

        <!-- 回调基础信息 -->
        <result property="callbackType" column="callback_type"/>
        <result property="callbackSource" column="callback_source"/>
        <result property="callbackStatus" column="callback_status"/>
        <result property="callbackResult" column="callback_result"/>

        <!-- 回调数据 -->
        <result property="callbackContent" column="callback_content"/>
        <result property="callbackSignature" column="callback_signature"/>
        <result property="callbackParams" column="callback_params"/>

        <!-- 处理信息 -->
        <result property="processTime" column="process_time"/>
        <result property="processResult" column="process_result"/>
        <result property="processMessage" column="process_message"/>
        <result property="errorCode" column="error_code"/>
        <result property="errorMessage" column="error_message"/>

        <!-- 网络信息 -->
        <result property="clientIp" column="client_ip"/>
        <result property="userAgent" column="user_agent"/>
        <result property="requestHeaders" column="request_headers"/>

        <!-- 重试信息 -->
        <result property="retryCount" column="retry_count"/>
        <result property="maxRetryCount" column="max_retry_count"/>
        <result property="nextRetryTime" column="next_retry_time"/>

        <!-- 业务扩展信息 -->
        <result property="actualPayAmount" column="actual_pay_amount"/>
        <result property="thirdPartyOrderNo" column="third_party_order_no"/>
        <result property="thirdPartyPayTime" column="third_party_pay_time"/>
        <result property="thirdPartyFee" column="third_party_fee"/>
        <result property="refundAmount" column="refund_amount"/>
        <result property="refundReason" column="refund_reason"/>
        <result property="failureReason" column="failure_reason"/>
        <result property="failureCode" column="failure_code"/>

        <!-- 验签相关 -->
        <result property="signatureValid" column="signature_valid"/>
        <result property="signatureAlgorithm" column="signature_algorithm"/>
        <result property="charset" column="charset"/>

        <!-- 其他信息 -->
        <result property="notifyTime" column="notify_time"/>
        <result property="version" column="version"/>
        <result property="priority" column="priority"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <!-- 根据支付记录ID查询回调记录 -->
    <select id="selectByPaymentRecordId" resultMap="paymentCallbackMap">
        SELECT * FROM t_payment_callback 
        WHERE deleted = 0 AND payment_record_id = #{paymentRecordId}
        ORDER BY create_time DESC
    </select>

    <!-- 根据内部交易号查询回调记录（利用冗余字段）-->
    <select id="selectByInternalTransactionNo" resultMap="paymentCallbackMap">
        SELECT * FROM t_payment_callback 
        WHERE deleted = 0 AND internal_transaction_no = #{internalTransactionNo}
        ORDER BY create_time DESC
    </select>

    <!-- 根据用户ID查询回调记录（利用冗余字段）-->
    <select id="selectByUserId" resultMap="paymentCallbackMap">
        SELECT * FROM t_payment_callback 
        WHERE deleted = 0 AND user_id = #{userId}
        <if test="callbackStatus != null and callbackStatus != ''">
            AND callback_status = #{callbackStatus}
        </if>
        ORDER BY create_time DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 根据用户名查询回调记录（利用冗余字段）-->
    <select id="selectByUserName" resultMap="paymentCallbackMap">
        SELECT * FROM t_payment_callback 
        WHERE deleted = 0 AND user_name = #{userName}
        <if test="callbackType != null and callbackType != ''">
            AND callback_type = #{callbackType}
        </if>
        ORDER BY create_time DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 查询处理失败的回调记录 -->
    <select id="selectFailedCallbacks" resultMap="paymentCallbackMap">
        SELECT * FROM t_payment_callback 
        WHERE deleted = 0 
        AND callback_status = 'FAILED'
        AND retry_count &lt; max_retry_count
        AND (next_retry_time IS NULL OR next_retry_time &lt;= NOW())
        ORDER BY create_time ASC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 查询待重试的回调记录 -->
    <select id="selectPendingRetryCallbacks" resultMap="paymentCallbackMap">
        SELECT * FROM t_payment_callback 
        WHERE deleted = 0 
        AND callback_status = 'RETRY'
        AND retry_count &lt; max_retry_count
        AND next_retry_time &lt;= NOW()
        ORDER BY priority DESC, create_time ASC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 统计回调成功率（按来源统计）-->
    <select id="calculateSuccessRateBySource" resultType="java.util.Map">
        SELECT 
            callback_source,
            COUNT(*) as total_count,
            SUM(CASE WHEN callback_status = 'SUCCESS' THEN 1 ELSE 0 END) as success_count,
            ROUND(SUM(CASE WHEN callback_status = 'SUCCESS' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) as success_rate
        FROM t_payment_callback 
        WHERE deleted = 0
        <if test="callbackSource != null and callbackSource != ''">
            AND callback_source = #{callbackSource}
        </if>
        <if test="startTime != null">
            AND create_time >= #{startTime}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime}
        </if>
        GROUP BY callback_source
    </select>

    <!-- 统计回调处理时间分布 -->
    <select id="selectProcessTimeDistribution" resultType="java.util.Map">
        SELECT 
            callback_source,
            callback_type,
            AVG(TIMESTAMPDIFF(MICROSECOND, create_time, process_time) / 1000) as avg_process_time_ms,
            MIN(TIMESTAMPDIFF(MICROSECOND, create_time, process_time) / 1000) as min_process_time_ms,
            MAX(TIMESTAMPDIFF(MICROSECOND, create_time, process_time) / 1000) as max_process_time_ms
        FROM t_payment_callback 
        WHERE deleted = 0 
        AND process_time IS NOT NULL
        <if test="startTime != null">
            AND create_time >= #{startTime}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime}
        </if>
        GROUP BY callback_source, callback_type
    </select>

    <!-- 查询慢处理的回调记录 -->
    <select id="selectSlowProcessCallbacks" resultMap="paymentCallbackMap">
        SELECT * FROM t_payment_callback 
        WHERE deleted = 0 
        AND process_time IS NOT NULL
        AND TIMESTAMPDIFF(MICROSECOND, create_time, process_time) / 1000 > #{thresholdMs}
        ORDER BY TIMESTAMPDIFF(MICROSECOND, create_time, process_time) DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 更新回调处理结果 -->
    <update id="updateProcessResult">
        UPDATE t_payment_callback 
        SET callback_status = #{callbackStatus},
            process_result = #{processResult},
            process_message = #{processMessage},
            process_time = #{processTime},
            update_time = NOW(),
            version = version + 1
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 更新回调失败信息 -->
    <update id="updateFailureInfo">
        UPDATE t_payment_callback 
        SET callback_status = 'FAILED',
            error_code = #{errorCode},
            error_message = #{errorMessage},
            process_time = NOW(),
            retry_count = retry_count + 1,
            next_retry_time = DATE_ADD(NOW(), INTERVAL #{retryIntervalSeconds} SECOND),
            update_time = NOW(),
            version = version + 1
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 更新签名验证结果 -->
    <update id="updateSignatureValidation">
        UPDATE t_payment_callback 
        SET signature_valid = #{signatureValid},
            signature_algorithm = #{signatureAlgorithm},
            update_time = NOW(),
            version = version + 1
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 批量更新超时回调状态 -->
    <update id="batchUpdateTimeoutCallbacks">
        UPDATE t_payment_callback 
        SET callback_status = 'TIMEOUT',
            error_code = 'CALLBACK_TIMEOUT',
            error_message = '回调处理超时',
            update_time = NOW(),
            version = version + 1
        WHERE deleted = 0 
        AND callback_status = 'PROCESSING'
        AND create_time &lt; DATE_SUB(NOW(), INTERVAL #{timeoutMinutes} MINUTE)
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </update>

    <!-- 批量清理过期回调记录 -->
    <update id="batchCleanupExpiredCallbacks">
        UPDATE t_payment_callback 
        SET deleted = 1,
            update_time = NOW()
        WHERE deleted = 0 
        AND callback_status IN ('SUCCESS', 'FAILED', 'TIMEOUT')
        AND create_time &lt; DATE_SUB(NOW(), INTERVAL #{expireDays} DAY)
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </update>

    <!-- 复杂条件查询回调记录 -->
    <select id="selectByMultipleConditions" resultMap="paymentCallbackMap">
        <bind name="pattern" value="'%' + keyword + '%'" />
        SELECT * FROM t_payment_callback 
        WHERE deleted = 0
        <if test="paymentRecordId != null">
            AND payment_record_id = #{paymentRecordId}
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <if test="userName != null and userName != ''">
            AND user_name = #{userName}
        </if>
        <if test="callbackType != null and callbackType != ''">
            AND callback_type = #{callbackType}
        </if>
        <if test="callbackSource != null and callbackSource != ''">
            AND callback_source = #{callbackSource}
        </if>
        <if test="callbackStatus != null and callbackStatus != ''">
            AND callback_status = #{callbackStatus}
        </if>
        <if test="keyword != null and keyword != ''">
            AND (internal_transaction_no LIKE #{pattern} 
                 OR user_name LIKE #{pattern} 
                 OR third_party_order_no LIKE #{pattern}
                 OR error_message LIKE #{pattern})
        </if>
        <if test="startTime != null">
            AND create_time >= #{startTime}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime}
        </if>
        ORDER BY create_time DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

</mapper> 
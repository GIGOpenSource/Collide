<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gig.collide.tag.infrastructure.mapper.UserTagFollowMapper">

    <!-- 基础结果映射 -->
    <resultMap id="BaseResultMap" type="com.gig.collide.tag.domain.entity.UserTagFollow">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="tag_id" property="tagId"/>
        <result column="follow_time" property="followTime"/>
    </resultMap>

    <!-- 用户标签关注详情结果映射（含标签信息） -->
    <resultMap id="WithTagDetailsResultMap" type="com.gig.collide.tag.domain.entity.UserTagFollow">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="tag_id" property="tagId"/>
        <result column="follow_time" property="followTime"/>
        <!-- 可以扩展包含标签详情，但当前实体设计简单，暂不包含 -->
    </resultMap>

    <!-- 基础列定义 -->
    <sql id="Base_Column_List">
        utf.id, utf.user_id, utf.tag_id, utf.follow_time
    </sql>

    <!-- 标签详情列定义 -->
    <sql id="Tag_Column_List">
        t.id as tag_detail_id, t.tag_name, t.tag_description, t.tag_icon, 
        t.weight, t.hotness, t.follow_count, t.content_count, t.status
    </sql>

    <!-- 条件查询SQL片段 -->
    <sql id="Base_Where_Clause">
        <where>
            <if test="userId != null">
                AND utf.user_id = #{userId}
            </if>
            <if test="tagId != null">
                AND utf.tag_id = #{tagId}
            </if>
            <if test="followStartDate != null">
                AND DATE(utf.follow_time) >= #{followStartDate}
            </if>
            <if test="followEndDate != null">
                AND DATE(utf.follow_time) <= #{followEndDate}
            </if>
            <if test="tagStatus != null">
                AND t.status = #{tagStatus}
            </if>
        </where>
    </sql>

    <!-- 排序SQL片段 -->
    <sql id="Order_By_Clause">
        <choose>
            <when test="sortField != null and sortField.trim() != ''">
                ORDER BY 
                <choose>
                    <when test="sortField == 'follow_time'">utf.follow_time</when>
                    <when test="sortField == 'tag_name'">t.tag_name</when>
                    <when test="sortField == 'tag_weight'">t.weight</when>
                    <otherwise>utf.follow_time</otherwise>
                </choose>
                <choose>
                    <when test="sortDirection != null and sortDirection.toUpperCase() == 'ASC'">ASC</when>
                    <otherwise>DESC</otherwise>
                </choose>
            </when>
            <otherwise>ORDER BY utf.follow_time DESC</otherwise>
        </choose>
    </sql>

    <!-- =================== 用户关注查询 =================== -->

    <!-- 查询用户是否关注了指定标签 -->
    <select id="isUserFollowingTag" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM t_user_tag_follow utf
        WHERE utf.user_id = #{userId} AND utf.tag_id = #{tagId}
    </select>

    <!-- 获取用户关注的标签ID列表 -->
    <select id="getUserFollowedTagIds" resultType="java.lang.Long">
        SELECT utf.tag_id
        FROM t_user_tag_follow utf
        INNER JOIN t_tag t ON utf.tag_id = t.id
        WHERE utf.user_id = #{userId} AND t.status = 1
        ORDER BY utf.follow_time DESC
    </select>

    <!-- 获取用户关注的标签详情列表 -->
    <select id="getUserFollowedTagsWithDetails" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_user_tag_follow utf
        INNER JOIN t_tag t ON utf.tag_id = t.id
        WHERE utf.user_id = #{userId} AND t.status = 1
        ORDER BY utf.follow_time DESC
    </select>

    <!-- 统计用户关注的标签数量 -->
    <select id="countUserFollowedTags" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM t_user_tag_follow utf
        INNER JOIN t_tag t ON utf.tag_id = t.id
        WHERE utf.user_id = #{userId} AND t.status = 1
    </select>

    <!-- 获取用户最近关注的标签 -->
    <select id="getUserRecentFollowedTags" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_user_tag_follow utf
        INNER JOIN t_tag t ON utf.tag_id = t.id
        WHERE utf.user_id = #{userId} 
          AND t.status = 1
          AND utf.follow_time >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        ORDER BY utf.follow_time DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- =================== 标签关注者查询 =================== -->

    <!-- 获取标签的关注者用户ID列表 -->
    <select id="getTagFollowers" resultType="java.lang.Long">
        SELECT utf.user_id
        FROM t_user_tag_follow utf
        WHERE utf.tag_id = #{tagId}
        ORDER BY utf.follow_time DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 统计标签的关注者数量 -->
    <select id="countTagFollowers" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM t_user_tag_follow utf
        WHERE utf.tag_id = #{tagId}
    </select>

    <!-- 获取标签最近的关注者 -->
    <select id="getTagRecentFollowers" resultType="java.lang.Long">
        SELECT utf.user_id
        FROM t_user_tag_follow utf
        WHERE utf.tag_id = #{tagId}
          AND utf.follow_time >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        ORDER BY utf.follow_time DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- =================== 协同过滤支持查询 =================== -->

    <!-- 获取活跃的标签用户（用于协同过滤） -->
    <select id="getActiveTagUsers" resultType="java.lang.Long">
        SELECT utf.user_id
        FROM t_user_tag_follow utf
        INNER JOIN t_tag t ON utf.tag_id = t.id
        WHERE t.status = 1
          AND utf.follow_time >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        GROUP BY utf.user_id
        HAVING COUNT(DISTINCT utf.tag_id) >= #{minTagCount}
        ORDER BY COUNT(DISTINCT utf.tag_id) DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 查找关注了指定标签的其他用户 -->
    <select id="findUsersWithSimilarTags" resultType="java.lang.Long">
        SELECT utf.user_id
        FROM t_user_tag_follow utf
        WHERE utf.tag_id IN
        <foreach collection="tagIds" item="tagId" open="(" separator="," close=")">
            #{tagId}
        </foreach>
        <if test="excludeUserId != null">
            AND utf.user_id != #{excludeUserId}
        </if>
        GROUP BY utf.user_id
        ORDER BY COUNT(DISTINCT utf.tag_id) DESC
        <if test="limit != null and limit > 0">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 计算用户之间的共同标签数量 -->
    <select id="countCommonTags" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM (
            SELECT utf1.tag_id
            FROM t_user_tag_follow utf1
            INNER JOIN t_tag t ON utf1.tag_id = t.id
            WHERE utf1.user_id = #{userId1} AND t.status = 1
        ) tags1
        INNER JOIN (
            SELECT utf2.tag_id
            FROM t_user_tag_follow utf2
            INNER JOIN t_tag t ON utf2.tag_id = t.id
            WHERE utf2.user_id = #{userId2} AND t.status = 1
        ) tags2 ON tags1.tag_id = tags2.tag_id
    </select>

    <!-- 获取两个用户的共同标签列表 -->
    <select id="getCommonTagIds" resultType="java.lang.Long">
        SELECT utf1.tag_id
        FROM t_user_tag_follow utf1
        INNER JOIN t_user_tag_follow utf2 ON utf1.tag_id = utf2.tag_id
        INNER JOIN t_tag t ON utf1.tag_id = t.id
        WHERE utf1.user_id = #{userId1}
          AND utf2.user_id = #{userId2}
          AND t.status = 1
        ORDER BY t.weight DESC, t.hotness DESC
    </select>

    <!-- =================== 条件查询 =================== -->

    <!-- 根据条件查询用户标签关注记录 -->
    <select id="findUserTagFollowsByCondition" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_user_tag_follow utf
        INNER JOIN t_tag t ON utf.tag_id = t.id
        <include refid="Base_Where_Clause"/>
        <include refid="Order_By_Clause"/>
        <if test="offset != null and pageSize != null">
            LIMIT #{offset}, #{pageSize}
        </if>
    </select>

    <!-- 根据条件统计用户标签关注记录数量 -->
    <select id="countUserTagFollowsByCondition" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM t_user_tag_follow utf
        INNER JOIN t_tag t ON utf.tag_id = t.id
        <include refid="Base_Where_Clause"/>
    </select>

    <!-- =================== 批量操作 =================== -->

    <!-- 批量检查用户是否关注了指定标签 -->
    <select id="batchCheckUserFollowing" resultType="java.lang.Long">
        SELECT utf.tag_id
        FROM t_user_tag_follow utf
        WHERE utf.user_id = #{userId}
          AND utf.tag_id IN
        <foreach collection="tagIds" item="tagId" open="(" separator="," close=")">
            #{tagId}
        </foreach>
    </select>

    <!-- 批量删除用户的标签关注 -->
    <delete id="batchDeleteUserTagFollows">
        DELETE FROM t_user_tag_follow
        WHERE user_id = #{userId}
          AND tag_id IN
        <foreach collection="tagIds" item="tagId" open="(" separator="," close=")">
            #{tagId}
        </foreach>
    </delete>

    <!-- 批量插入用户标签关注记录 -->
    <insert id="batchInsertUserTagFollows">
        INSERT INTO t_user_tag_follow (user_id, tag_id, follow_time)
        VALUES
        <foreach collection="follows" item="follow" separator=",">
            (#{follow.userId}, #{follow.tagId}, #{follow.followTime})
        </foreach>
    </insert>

    <!-- =================== 统计分析 =================== -->

    <!-- 获取用户标签关注的权重分布 -->
    <select id="getUserTagWeightDistribution" resultType="java.util.Map">
        SELECT 
            CASE 
                WHEN t.weight >= 80 THEN '高权重(80-100)'
                WHEN t.weight >= 60 THEN '中高权重(60-79)'
                WHEN t.weight >= 40 THEN '中权重(40-59)'
                WHEN t.weight >= 20 THEN '中低权重(20-39)'
                ELSE '低权重(1-19)'
            END as weight_range,
            COUNT(*) as tag_count
        FROM t_user_tag_follow utf
        INNER JOIN t_tag t ON utf.tag_id = t.id
        WHERE utf.user_id = #{userId} AND t.status = 1
        GROUP BY weight_range
        ORDER BY MIN(t.weight) DESC
    </select>

    <!-- 获取用户关注标签的时间分布 -->
    <select id="getUserFollowTimeDistribution" resultType="java.util.Map">
        SELECT 
            DATE(utf.follow_time) as follow_date,
            COUNT(*) as follow_count
        FROM t_user_tag_follow utf
        WHERE utf.user_id = #{userId}
          AND utf.follow_time >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        GROUP BY DATE(utf.follow_time)
        ORDER BY follow_date DESC
    </select>

    <!-- 统计每日新增关注数 -->
    <select id="getDailyFollowStats" resultType="java.util.Map">
        SELECT 
            DATE(utf.follow_time) as follow_date,
            COUNT(*) as follow_count,
            COUNT(DISTINCT utf.user_id) as user_count
        FROM t_user_tag_follow utf
        <if test="tagId != null">
            WHERE utf.tag_id = #{tagId}
              AND utf.follow_time >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        </if>
        <if test="tagId == null">
            WHERE utf.follow_time >= DATE_SUB(NOW(), INTERVAL #{days} DAY)
        </if>
        GROUP BY DATE(utf.follow_time)
        ORDER BY follow_date DESC
    </select>

    <!-- =================== 数据清理 =================== -->

    <!-- 清理无效的用户标签关注（针对已删除的标签） -->
    <delete id="cleanupInvalidFollows">
        DELETE utf FROM t_user_tag_follow utf
        LEFT JOIN t_tag t ON utf.tag_id = t.id
        WHERE t.id IS NULL
        <if test="userId != null">
            AND utf.user_id = #{userId}
        </if>
    </delete>

    <!-- 删除用户的所有标签关注 -->
    <delete id="deleteAllUserFollows">
        DELETE FROM t_user_tag_follow
        WHERE user_id = #{userId}
    </delete>

    <!-- 删除标签的所有关注记录 -->
    <delete id="deleteAllTagFollows">
        DELETE FROM t_user_tag_follow
        WHERE tag_id = #{tagId}
    </delete>

</mapper>
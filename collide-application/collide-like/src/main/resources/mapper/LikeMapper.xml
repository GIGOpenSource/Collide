<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gig.collide.like.infrastructure.mapper.LikeMapper">

    <!-- 基础字段列表 -->
    <sql id="baseColumns">
        id, like_type, target_id, user_id,
        target_title, target_author_id,
        user_nickname, user_avatar,
        status, create_time, update_time
    </sql>

    <!-- 查询用户对目标对象的点赞记录 -->
    <select id="findByUserAndTarget" resultType="com.gig.collide.like.domain.entity.Like">
        SELECT <include refid="baseColumns" />
        FROM t_like
        WHERE user_id = #{userId}
          AND like_type = #{likeType}
          AND target_id = #{targetId}
        ORDER BY create_time DESC
        LIMIT 1
    </select>

    <!-- 检查用户是否已点赞 -->
    <select id="checkLikeExists" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM t_like
        WHERE user_id = #{userId}
          AND like_type = #{likeType}
          AND target_id = #{targetId}
          AND status = 'active'
    </select>

    <!-- 分页查询用户点赞记录 -->
    <select id="findUserLikes" resultType="com.gig.collide.like.domain.entity.Like">
        SELECT <include refid="baseColumns" />
        FROM t_like
        WHERE user_id = #{userId}
          <if test="likeType != null and likeType != ''">
              AND like_type = #{likeType}
          </if>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY create_time DESC
    </select>

    <!-- 分页查询目标对象的点赞记录 -->
    <select id="findTargetLikes" resultType="com.gig.collide.like.domain.entity.Like">
        SELECT <include refid="baseColumns" />
        FROM t_like
        WHERE target_id = #{targetId}
          AND like_type = #{likeType}
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY create_time DESC
    </select>

    <!-- 查询作者作品的点赞记录 -->
    <select id="findAuthorLikes" resultType="com.gig.collide.like.domain.entity.Like">
        SELECT <include refid="baseColumns" />
        FROM t_like
        WHERE target_author_id = #{targetAuthorId}
          <if test="likeType != null and likeType != ''">
              AND like_type = #{likeType}
          </if>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY create_time DESC
    </select>

    <!-- 统计目标对象的点赞数量 -->
    <select id="countTargetLikes" resultType="long">
        SELECT COUNT(*)
        FROM t_like
        WHERE target_id = #{targetId}
          AND like_type = #{likeType}
          AND status = COALESCE(#{status}, 'active')
    </select>

    <!-- 统计用户的点赞数量 -->
    <select id="countUserLikes" resultType="long">
        SELECT COUNT(*)
        FROM t_like
        WHERE user_id = #{userId}
          <if test="likeType != null and likeType != ''">
              AND like_type = #{likeType}
          </if>
          AND status = COALESCE(#{status}, 'active')
    </select>

    <!-- 统计作者作品的被点赞数量 -->
    <select id="countAuthorLikes" resultType="long">
        SELECT COUNT(*)
        FROM t_like
        WHERE target_author_id = #{targetAuthorId}
          <if test="likeType != null and likeType != ''">
              AND like_type = #{likeType}
          </if>
          AND status = COALESCE(#{status}, 'active')
    </select>

    <!-- 批量检查点赞状态 -->
    <select id="batchCheckLikeStatus" resultType="long">
        SELECT DISTINCT target_id
        FROM t_like
        WHERE user_id = #{userId}
          AND like_type = #{likeType}
          AND status = 'active'
          AND target_id IN
          <foreach collection="targetIds" item="targetId" open="(" separator="," close=")">
              #{targetId}
          </foreach>
    </select>

    <!-- 更新点赞状态 -->
    <update id="updateLikeStatus">
        UPDATE t_like
        SET status = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 查询时间范围内的点赞记录 -->
    <select id="findByTimeRange" resultType="com.gig.collide.like.domain.entity.Like">
        SELECT <include refid="baseColumns" />
        FROM t_like
        WHERE create_time BETWEEN #{startTime} AND #{endTime}
          <if test="likeType != null and likeType != ''">
              AND like_type = #{likeType}
          </if>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY create_time DESC
    </select>

</mapper>
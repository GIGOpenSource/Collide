<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gig.collide.content.infrastructure.mapper.ContentMapper">

    <!-- 基础字段定义 -->
    <sql id="baseColumns">
        id, title, description, content_type, content_data, cover_url, tags,
        author_id, author_nickname, author_avatar,
        category_id, category_name,
        status, review_status,
        view_count, like_count, comment_count, favorite_count, score_count, score_total,
        publish_time, create_time, update_time
    </sql>

    <!-- 根据作者ID查询内容列表 -->
    <select id="selectByAuthorId" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        WHERE author_id = #{authorId}
        AND status = 'PUBLISHED' AND review_status = 'APPROVED'
        ORDER BY publish_time DESC
    </select>

    <!-- 根据分类ID查询内容列表 -->
    <select id="selectByCategoryId" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        WHERE category_id = #{categoryId}
        AND status = 'PUBLISHED' AND review_status = 'APPROVED'
        ORDER BY publish_time DESC
    </select>

    <!-- 根据内容类型查询内容列表 -->
    <select id="selectByContentType" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        WHERE content_type = #{contentType}
        AND status = 'PUBLISHED' AND review_status = 'APPROVED'
        ORDER BY publish_time DESC
    </select>

    <!-- 根据状态查询内容列表 -->
    <select id="selectByStatus" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        WHERE status = #{status}
        ORDER BY create_time DESC
    </select>

    <!-- 根据审核状态查询内容列表 -->
    <select id="selectByReviewStatus" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        WHERE review_status = #{reviewStatus}
        ORDER BY create_time DESC
    </select>

    <!-- 分页查询已发布且审核通过的内容 -->
    <select id="selectPublishedContent" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        WHERE status = 'PUBLISHED' AND review_status = 'APPROVED'
        ORDER BY publish_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 根据标题模糊搜索内容 -->
    <select id="searchByTitle" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        WHERE title LIKE CONCAT('%', #{title}, '%')
        AND status = 'PUBLISHED' AND review_status = 'APPROVED'
        ORDER BY view_count DESC, publish_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 根据标签搜索内容 -->
    <select id="searchByTags" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        WHERE tags LIKE CONCAT('%', #{tags}, '%')
        AND status = 'PUBLISHED' AND review_status = 'APPROVED'
        ORDER BY view_count DESC, publish_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 查询热门内容（按查看数排序） -->
    <select id="selectHotContent" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        WHERE status = 'PUBLISHED' AND review_status = 'APPROVED'
        ORDER BY view_count DESC, like_count DESC
        LIMIT #{limit}
    </select>

    <!-- 查询最新内容（按发布时间排序） -->
    <select id="selectLatestContent" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        WHERE status = 'PUBLISHED' AND review_status = 'APPROVED'
        ORDER BY publish_time DESC
        LIMIT #{limit}
    </select>

    <!-- 查询高评分内容 -->
    <select id="selectTopRatedContent" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        WHERE status = 'PUBLISHED' AND review_status = 'APPROVED'
        AND score_count > 0 AND (score_total / score_count) >= #{minScore}
        ORDER BY (score_total / score_count) DESC, score_count DESC
        LIMIT #{limit}
    </select>

    <!-- 更新查看数 -->
    <update id="updateViewCount">
        UPDATE t_content
        SET view_count = view_count + #{increment}
        WHERE id = #{id}
    </update>

    <!-- 更新点赞数 -->
    <update id="updateLikeCount">
        UPDATE t_content
        SET like_count = like_count + #{increment}
        WHERE id = #{id}
    </update>

    <!-- 更新评论数 -->
    <update id="updateCommentCount">
        UPDATE t_content
        SET comment_count = comment_count + #{increment}
        WHERE id = #{id}
    </update>

    <!-- 更新收藏数 -->
    <update id="updateFavoriteCount">
        UPDATE t_content
        SET favorite_count = favorite_count + #{increment}
        WHERE id = #{id}
    </update>

    <!-- 更新评分统计 -->
    <update id="updateScoreStats">
        UPDATE t_content
        SET score_count = #{scoreCount}, score_total = #{scoreTotal}
        WHERE id = #{id}
    </update>

    <!-- 批量更新内容状态 -->
    <update id="batchUpdateStatus">
        UPDATE t_content
        SET status = #{status}
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 批量更新审核状态 -->
    <update id="batchUpdateReviewStatus">
        UPDATE t_content
        SET review_status = #{reviewStatus}
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 统计内容总数 -->
    <select id="countTotal" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM t_content
    </select>

    <!-- 根据条件统计内容数量 -->
    <select id="countByCondition" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM t_content
        WHERE 1=1
        <if test="authorId != null">
            AND author_id = #{authorId}
        </if>
        <if test="categoryId != null">
            AND category_id = #{categoryId}
        </if>
        <if test="contentType != null and contentType != ''">
            AND content_type = #{contentType}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="reviewStatus != null and reviewStatus != ''">
            AND review_status = #{reviewStatus}
        </if>
    </select>

    <!-- 获取作者的内容统计 -->
    <select id="getAuthorContentStats" resultType="java.util.Map">
        SELECT
            content_type,
            COUNT(*) as content_count,
            SUM(view_count) as total_views,
            SUM(like_count) as total_likes,
            SUM(favorite_count) as total_favorites,
            AVG(CASE WHEN score_count > 0 THEN score_total / score_count ELSE 0 END) as avg_score
        FROM t_content
        WHERE author_id = #{authorId}
        GROUP BY content_type
    </select>

    <!-- 获取分类的内容统计 -->
    <select id="getCategoryContentStats" resultType="java.util.Map">
        SELECT
            content_type,
            COUNT(*) as content_count,
            SUM(view_count) as total_views,
            SUM(like_count) as total_likes,
            SUM(favorite_count) as total_favorites,
            AVG(CASE WHEN score_count > 0 THEN score_total / score_count ELSE 0 END) as avg_score
        FROM t_content
        WHERE category_id = #{categoryId}
        GROUP BY content_type
    </select>

</mapper>
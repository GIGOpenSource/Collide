<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gig.collide.content.infrastructure.mapper.ContentMapper">

    <!-- 基础字段定义 -->
    <sql id="baseColumns">
        id, title, description, content_type, content_data, cover_url, tags,
        author_id, author_nickname, author_avatar,
        category_id, category_name,
        status, review_status,
        view_count, like_count, comment_count, favorite_count, share_count, score_count, score_total,
        publish_time, create_time, update_time
    </sql>

    <!-- 通用条件查询内容列表 - 支持多种排序：观看数、点赞数、收藏数、分享数等 -->
    <select id="selectContentsByConditions" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        <where>
            <if test="authorId != null">
                AND author_id = #{authorId}
            </if>
            <if test="categoryId != null">
                AND category_id = #{categoryId}
            </if>
            <if test="contentType != null and contentType != ''">
                AND content_type = #{contentType}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="reviewStatus != null and reviewStatus != ''">
                AND review_status = #{reviewStatus}
            </if>
            <if test="minScore != null">
                AND score_count > 0 AND (score_total / score_count) >= #{minScore}
            </if>
            <if test="timeRange != null and timeRange > 0">
                AND create_time >= DATE_SUB(NOW(), INTERVAL #{timeRange} DAY)
            </if>
        </where>
        <choose>
            <when test="orderBy == 'createTime'">
                ORDER BY create_time 
                <if test="orderDirection != null and orderDirection != ''">
                    ${orderDirection}
                </if>
                <if test="orderDirection == null or orderDirection == ''">
                    DESC
                </if>
            </when>
            <when test="orderBy == 'viewCount'">
                ORDER BY view_count 
                <if test="orderDirection != null and orderDirection != ''">
                    ${orderDirection}
                </if>
                <if test="orderDirection == null or orderDirection == ''">
                    DESC
                </if>
            </when>
            <when test="orderBy == 'likeCount'">
                ORDER BY like_count 
                <if test="orderDirection != null and orderDirection != ''">
                    ${orderDirection}
                </if>
                <if test="orderDirection == null or orderDirection == ''">
                    DESC
                </if>
            </when>
            <when test="orderBy == 'updateTime'">
                ORDER BY update_time 
                <if test="orderDirection != null and orderDirection != ''">
                    ${orderDirection}
                </if>
                <if test="orderDirection == null or orderDirection == ''">
                    DESC
                </if>
            </when>
            <when test="orderBy == 'favoriteCount'">
                ORDER BY favorite_count 
                <if test="orderDirection != null and orderDirection != ''">
                    ${orderDirection}
                </if>
                <if test="orderDirection == null or orderDirection == ''">
                    DESC
                </if>
            </when>
            <when test="orderBy == 'shareCount'">
                ORDER BY share_count 
                <if test="orderDirection != null and orderDirection != ''">
                    ${orderDirection}
                </if>
                <if test="orderDirection == null or orderDirection == ''">
                    DESC
                </if>
            </when>
            <when test="orderBy == 'commentCount'">
                ORDER BY comment_count 
                <if test="orderDirection != null and orderDirection != ''">
                    ${orderDirection}
                </if>
                <if test="orderDirection == null or orderDirection == ''">
                    DESC
                </if>
            </when>
            <when test="orderBy == 'score'">
                ORDER BY (score_total / score_count) 
                <if test="orderDirection != null and orderDirection != ''">
                    ${orderDirection}
                </if>
                <if test="orderDirection == null or orderDirection == ''">
                    DESC
                </if>
            </when>
            <otherwise>
                ORDER BY publish_time DESC
            </otherwise>
        </choose>
        <if test="currentPage != null and pageSize != null">
            LIMIT #{currentPage}, #{pageSize}
        </if>
        <!-- 使用索引: idx_author_status_publish, idx_category_status_publish, idx_type_status_publish -->
    </select>

    <!-- 通用搜索内容 - 使用函数索引优化 -->
    <select id="searchContents" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        <where>
            <if test="keyword != null and keyword != ''">
                AND (LOWER(title) LIKE CONCAT('%', LOWER(#{keyword}), '%')
                OR LOWER(description) LIKE CONCAT('%', LOWER(#{keyword}), '%')
                OR JSON_EXTRACT(tags, '$') LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="contentType != null and contentType != ''">
                AND content_type = #{contentType}
            </if>
            <if test="categoryId != null">
                AND category_id = #{categoryId}
            </if>
            AND status = 'PUBLISHED' AND review_status = 'APPROVED'
        </where>
        ORDER BY view_count DESC, publish_time DESC
        <if test="currentPage != null and pageSize != null">
            LIMIT #{currentPage}, #{pageSize}
        </if>
        <!-- 使用索引: idx_title_search, idx_tags_search, idx_hot_content -->
    </select>

    <!-- 推荐内容（基于用户行为的个性化推荐） -->
    <select id="getRecommendedContents" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        <where>
            AND status = 'PUBLISHED' AND review_status = 'APPROVED'
            <if test="excludeContentIds != null and excludeContentIds.size() > 0">
                AND id NOT IN
                <foreach collection="excludeContentIds" item="contentId" open="(" separator="," close=")">
                    #{contentId}
                </foreach>
            </if>
        </where>
        ORDER BY view_count DESC, like_count DESC, publish_time DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
        <!-- 使用索引: idx_hot_content (view_count DESC, like_count DESC, publish_time DESC) -->
    </select>

    <!-- 相似内容（基于分类和标签的相似度推荐） -->
    <select id="getSimilarContents" resultType="com.gig.collide.content.domain.entity.Content">
        SELECT <include refid="baseColumns"/>
        FROM t_content
        WHERE id != #{contentId}
        AND status = 'PUBLISHED' AND review_status = 'APPROVED'
        AND (category_id = (SELECT category_id FROM t_content WHERE id = #{contentId})
        OR content_type = (SELECT content_type FROM t_content WHERE id = #{contentId}))
        ORDER BY view_count DESC, publish_time DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
        <!-- 使用索引: idx_category_status_publish -->
    </select>

    <!-- 更新内容状态 -->
    <update id="updateContentStatus">
        UPDATE t_content
        SET status = #{status}
        WHERE id = #{id}
        <!-- 使用主键索引 -->
    </update>

    <!-- 更新审核状态 -->
    <update id="updateReviewStatus">
        UPDATE t_content
        SET review_status = #{reviewStatus}
        WHERE id = #{id}
        <!-- 使用主键索引 -->
    </update>

    <!-- 更新内容基本信息 -->
    <update id="updateContentInfo">
        UPDATE t_content
        SET title = #{title}, 
            description = #{description}, 
            tags = #{tags}, 
            cover_image = #{coverImage}
        WHERE id = #{id}
        <!-- 使用主键索引 -->
    </update>

    <!-- 更新内容统计信息 -->
    <update id="updateContentStats">
        UPDATE t_content
        SET view_count = #{viewCount}, 
            like_count = #{likeCount}, 
            comment_count = #{commentCount}, 
            favorite_count = #{favoriteCount}
        WHERE id = #{id}
        <!-- 使用主键索引 -->
    </update>

    <!-- 批量更新状态 -->
    <update id="batchUpdateStatus">
        UPDATE t_content
        SET status = #{status}
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        <!-- 使用主键索引进行批量更新 -->
    </update>

    <!-- 软删除内容 -->
    <update id="softDeleteContent">
        UPDATE t_content
        SET status = 'DELETED'
        WHERE id = #{id}
        <!-- 使用主键索引 -->
    </update>

    <!-- 批量软删除内容 -->
    <update id="batchSoftDeleteContent">
        UPDATE t_content
        SET status = 'DELETED'
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        <!-- 使用主键索引进行批量更新 -->
    </update>

</mapper>
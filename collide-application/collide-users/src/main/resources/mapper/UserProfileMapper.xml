<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gig.collide.users.infrastructure.mapper.UserProfileMapper">

    <!-- 用户资料基础字段映射 - 更新后的t_user_profile表 -->
    <sql id="baseColumns">
        id, user_id, nickname, avatar, bio, birthday, gender, location, create_time, update_time
    </sql>

    <!-- 根据用户ID查询用户资料 -->
    <select id="selectByUserId" parameterType="long" resultType="com.gig.collide.users.domain.entity.UserProfile">
        SELECT <include refid="baseColumns" />
        FROM t_user_profile
        WHERE user_id = #{userId}
    </select>

    <!-- 根据ID查询用户资料 -->
    <select id="selectById" parameterType="long" resultType="com.gig.collide.users.domain.entity.UserProfile">
        SELECT <include refid="baseColumns" />
        FROM t_user_profile
        WHERE id = #{id}
    </select>

    <!-- 根据昵称查询用户资料 -->
    <select id="findByNickname" parameterType="string" resultType="com.gig.collide.users.domain.entity.UserProfile">
        SELECT <include refid="baseColumns" />
        FROM t_user_profile
        WHERE nickname = #{nickname}
        LIMIT 1
    </select>

    <!-- 检查昵称是否可用（排除指定用户） -->
    <select id="checkNicknameAvailable" resultType="boolean">
        SELECT COUNT(*) = 0
        FROM t_user_profile
        WHERE nickname = #{nickname}
        <if test="excludeUserId != null">
            AND user_id != #{excludeUserId}
        </if>
    </select>

    <!-- 批量根据用户ID查询资料 -->
    <select id="selectByUserIds" resultType="com.gig.collide.users.domain.entity.UserProfile">
        SELECT <include refid="baseColumns" />
        FROM t_user_profile
        WHERE user_id IN
        <foreach item="userId" collection="userIds" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ORDER BY create_time DESC
    </select>

    <!-- 根据昵称模糊搜索用户资料 - 建议添加idx_nickname索引 -->
    <select id="searchByNickname" resultType="com.gig.collide.users.domain.entity.UserProfile">
        SELECT <include refid="baseColumns" />
        FROM t_user_profile
        WHERE nickname LIKE CONCAT('%', #{nickname}, '%')
        ORDER BY create_time DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 根据所在地查询用户资料 - 建议添加idx_location索引 -->
    <select id="getProfilesByLocation" resultType="com.gig.collide.users.domain.entity.UserProfile">
        SELECT <include refid="baseColumns" />
        FROM t_user_profile
        WHERE location LIKE CONCAT('%', #{location}, '%')
        ORDER BY create_time DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 根据昵称精确查询 - 充分利用建议的idx_nickname索引 -->
    <select id="findByNicknameExact" resultType="com.gig.collide.users.domain.entity.UserProfile">
        SELECT <include refid="baseColumns" />
        FROM t_user_profile
        WHERE nickname = #{nickname}
        LIMIT 1
    </select>

    <!-- 根据性别查询 - 建议添加idx_gender索引 -->
    <select id="getProfilesByGender" resultType="com.gig.collide.users.domain.entity.UserProfile">
        SELECT <include refid="baseColumns" />
        FROM t_user_profile
        WHERE gender = #{gender}
        ORDER BY create_time DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 根据年龄范围查询 - 建议添加idx_birthday索引 -->
    <select id="getProfilesByAgeRange" resultType="com.gig.collide.users.domain.entity.UserProfile">
        SELECT <include refid="baseColumns" />
        FROM t_user_profile
        WHERE birthday IS NOT NULL
          AND YEAR(CURDATE()) - YEAR(birthday) BETWEEN #{minAge} AND #{maxAge}
        ORDER BY birthday DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 分页查询用户资料（支持条件查询） -->
    <select id="findProfilesByCondition" resultType="com.gig.collide.users.domain.entity.UserProfile">
        SELECT <include refid="baseColumns" />
        FROM t_user_profile
        <where>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="nickname != null and nickname != ''">
                AND nickname LIKE CONCAT('%', #{nickname}, '%')
            </if>
            <if test="gender != null">
                AND gender = #{gender}
            </if>
            <if test="location != null and location != ''">
                AND location LIKE CONCAT('%', #{location}, '%')
            </if>
            <if test="startAge != null and endAge != null">
                AND YEAR(CURDATE()) - YEAR(birthday) BETWEEN #{startAge} AND #{endAge}
            </if>
        </where>
        ORDER BY 
        <choose>
            <when test="orderBy == 'nickname'">nickname ASC</when>
            <when test="orderBy == 'birthday'">birthday DESC</when>
            <otherwise>create_time DESC</otherwise>
        </choose>
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 统计用户资料数量（支持条件查询） -->
    <select id="countProfilesByCondition" resultType="long">
        SELECT COUNT(*)
        FROM t_user_profile
        <where>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="nickname != null and nickname != ''">
                AND nickname LIKE CONCAT('%', #{nickname}, '%')
            </if>
            <if test="gender != null">
                AND gender = #{gender}
            </if>
            <if test="location != null and location != ''">
                AND location LIKE CONCAT('%', #{location}, '%')
            </if>
            <if test="startAge != null and endAge != null">
                AND YEAR(CURDATE()) - YEAR(birthday) BETWEEN #{startAge} AND #{endAge}
            </if>
        </where>
    </select>

    <!-- 插入用户资料 -->
    <insert id="insert" parameterType="com.gig.collide.users.domain.entity.UserProfile" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_user_profile (
            user_id, nickname, avatar, bio, birthday, gender, location, create_time, update_time
        ) VALUES (
            #{userId}, #{nickname}, #{avatar}, #{bio}, #{birthday}, #{gender}, #{location}, NOW(), NOW()
        )
    </insert>

    <!-- 更新用户资料 -->
    <update id="updateById" parameterType="com.gig.collide.users.domain.entity.UserProfile">
        UPDATE t_user_profile
        <set>
            <if test="nickname != null and nickname != ''">nickname = #{nickname},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="bio != null">bio = #{bio},</if>
            <if test="birthday != null">birthday = #{birthday},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="location != null">location = #{location},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 更新用户头像 -->
    <update id="updateAvatar">
        UPDATE t_user_profile
        SET avatar = #{avatar}, update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 更新用户昵称 -->
    <update id="updateNickname">
        UPDATE t_user_profile
        SET nickname = #{nickname}, update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 更新用户生日 -->
    <update id="updateBirthday">
        UPDATE t_user_profile
        SET birthday = #{birthday}, update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 更新用户性别 -->
    <update id="updateGender">
        UPDATE t_user_profile
        SET gender = #{gender}, update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 更新用户所在地 -->
    <update id="updateLocation">
        UPDATE t_user_profile
        SET location = #{location}, update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 更新用户个人简介 -->
    <update id="updateBio">
        UPDATE t_user_profile
        SET bio = #{bio}, update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 删除用户资料 -->
    <delete id="deleteByUserId">
        DELETE FROM t_user_profile
        WHERE user_id = #{userId}
    </delete>

    <!-- 根据ID删除用户资料 -->
    <delete id="deleteById">
        DELETE FROM t_user_profile
        WHERE id = #{id}
    </delete>

</mapper>
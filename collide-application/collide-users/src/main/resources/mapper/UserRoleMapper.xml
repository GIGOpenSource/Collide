<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gig.collide.users.infrastructure.mapper.UserRoleMapper">

    <!-- 用户角色基础字段映射 - 更新后的t_user_role表 -->
    <sql id="baseColumns">
        id, user_id, role, expire_time, status, assign_time, assign_by, 
        revoke_time, revoke_by, create_time, update_time
    </sql>

    <!-- 根据ID查询角色 -->
    <select id="selectById" parameterType="int" resultType="com.gig.collide.users.domain.entity.UserRole">
        SELECT <include refid="baseColumns" />
        FROM t_user_role
        WHERE id = #{id}
    </select>

    <!-- 根据用户ID查询所有角色 -->
    <select id="selectByUserId" resultType="com.gig.collide.users.domain.entity.UserRole">
        SELECT <include refid="baseColumns" />
        FROM t_user_role
        WHERE user_id = #{userId}
        ORDER BY assign_time DESC
    </select>

    <!-- 根据用户ID查询有效角色 -->
    <select id="selectActiveRolesByUserId" resultType="com.gig.collide.users.domain.entity.UserRole">
        SELECT <include refid="baseColumns" />
        FROM t_user_role
        WHERE user_id = #{userId}
          AND status = 'active'
          AND (expire_time IS NULL OR expire_time > NOW())
        ORDER BY assign_time DESC
    </select>

    <!-- 根据角色查询用户列表 -->
    <select id="selectUsersByRole" resultType="com.gig.collide.users.domain.entity.UserRole">
        SELECT <include refid="baseColumns" />
        FROM t_user_role
        WHERE role = #{role}
        <if test="activeOnly">
            AND status = 'active'
            AND (expire_time IS NULL OR expire_time > NOW())
        </if>
        ORDER BY assign_time DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 检查用户是否拥有指定角色 - 使用uk_user_role复合唯一索引 -->
    <select id="checkUserHasRole" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM t_user_role
        WHERE user_id = #{userId} 
          AND role = #{role}
          AND status = 'active'
    </select>

    <!-- 检查用户是否拥有有效的指定角色 - 使用uk_user_role复合唯一索引 -->
    <select id="checkUserHasActiveRole" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM t_user_role
        WHERE user_id = #{userId} 
          AND role = #{role}
          AND status = 'active'
          AND (expire_time IS NULL OR expire_time > NOW())
    </select>

    <!-- 获取用户指定角色信息 - 使用uk_user_role复合唯一索引 -->
    <select id="selectUserRole" resultType="com.gig.collide.users.domain.entity.UserRole">
        SELECT <include refid="baseColumns" />
        FROM t_user_role
        WHERE user_id = #{userId} AND role = #{role}
        LIMIT 1
    </select>

    <!-- 获取用户有效的指定角色 - 使用uk_user_role复合唯一索引 -->
    <select id="selectActiveUserRole" resultType="com.gig.collide.users.domain.entity.UserRole">
        SELECT <include refid="baseColumns" />
        FROM t_user_role
        WHERE user_id = #{userId} 
          AND role = #{role}
          AND status = 'active'
          AND (expire_time IS NULL OR expire_time > NOW())
        LIMIT 1
    </select>

    <!-- 获取即将过期的角色 -->
    <select id="getExpiringRoles" resultType="com.gig.collide.users.domain.entity.UserRole">
        SELECT <include refid="baseColumns" />
        FROM t_user_role
        WHERE status = 'active'
          AND expire_time IS NOT NULL
          AND expire_time > NOW()
          AND expire_time &lt;= DATE_ADD(NOW(), INTERVAL #{days} DAY)
        ORDER BY expire_time ASC
    </select>

    <!-- 获取已过期的角色 -->
    <select id="getExpiredRoles" resultType="com.gig.collide.users.domain.entity.UserRole">
        SELECT <include refid="baseColumns" />
        FROM t_user_role
        WHERE status = 'active'
          AND expire_time IS NOT NULL
          AND expire_time &lt;= NOW()
        ORDER BY expire_time ASC
    </select>

    <!-- 分页查询角色（支持条件查询） -->
    <select id="findRolesByCondition" resultType="com.gig.collide.users.domain.entity.UserRole">
        SELECT <include refid="baseColumns" />
        FROM t_user_role
        <where>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="role != null and role != ''">
                AND role = #{role}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="activeOnly != null and activeOnly">
                AND status = 'active'
                AND (expire_time IS NULL OR expire_time > NOW())
            </if>
            <if test="assignBy != null">
                AND assign_by = #{assignBy}
            </if>
            <if test="assignTimeStart != null">
                AND assign_time >= #{assignTimeStart}
            </if>
            <if test="assignTimeEnd != null">
                AND assign_time &lt;= #{assignTimeEnd}
            </if>
        </where>
        ORDER BY 
        <choose>
            <when test="orderBy == 'assign_time'">assign_time DESC</when>
            <when test="orderBy == 'expire_time'">expire_time ASC</when>
            <when test="orderBy == 'role'">role ASC</when>
            <otherwise>create_time DESC</otherwise>
        </choose>
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 统计角色数量（支持条件查询） -->
    <select id="countRolesByCondition" resultType="long">
        SELECT COUNT(*)
        FROM t_user_role
        <where>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="role != null and role != ''">
                AND role = #{role}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="activeOnly != null and activeOnly">
                AND status = 'active'
                AND (expire_time IS NULL OR expire_time > NOW())
            </if>
            <if test="assignBy != null">
                AND assign_by = #{assignBy}
            </if>
            <if test="assignTimeStart != null">
                AND assign_time >= #{assignTimeStart}
            </if>
            <if test="assignTimeEnd != null">
                AND assign_time &lt;= #{assignTimeEnd}
            </if>
        </where>
    </select>

    <!-- 插入角色记录 -->
    <insert id="insert" parameterType="com.gig.collide.users.domain.entity.UserRole" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_user_role (
            user_id, role, expire_time, status, assign_time, assign_by, create_time, update_time
        ) VALUES (
            #{userId}, #{role}, #{expireTime}, #{status}, #{assignTime}, #{assignBy}, NOW(), NOW()
        )
    </insert>

    <!-- 更新角色信息 -->
    <update id="updateById" parameterType="com.gig.collide.users.domain.entity.UserRole">
        UPDATE t_user_role
        <set>
            <if test="role != null and role != ''">role = #{role},</if>
            <if test="expireTime != null">expire_time = #{expireTime},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="assignTime != null">assign_time = #{assignTime},</if>
            <if test="assignBy != null">assign_by = #{assignBy},</if>
            <if test="revokeTime != null">revoke_time = #{revokeTime},</if>
            <if test="revokeBy != null">revoke_by = #{revokeBy},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 更新角色过期时间 -->
    <update id="updateExpireTime">
        UPDATE t_user_role
        SET expire_time = #{expireTime}, update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 延长角色有效期 -->
    <update id="extendExpireTime">
        UPDATE t_user_role
        <set>
            <choose>
                <when test="expire_time == null or expire_time &lt;= NOW()">
                    expire_time = DATE_ADD(NOW(), INTERVAL #{days} DAY),
                </when>
                <otherwise>
                    expire_time = DATE_ADD(expire_time, INTERVAL #{days} DAY),
                </otherwise>
            </choose>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 设置永久角色 -->
    <update id="setPermanentRole">
        UPDATE t_user_role
        SET expire_time = NULL, update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 撤销用户指定角色 - 使用uk_user_role复合唯一索引 -->
    <update id="revokeUserRole">
        UPDATE t_user_role
        SET status = 'revoked', 
            revoke_time = NOW(), 
            revoke_by = #{revokeBy},
            update_time = NOW()
        WHERE user_id = #{userId} 
          AND role = #{role} 
          AND status = 'active'
    </update>

    <!-- 撤销用户所有角色 - 使用idx_user_id索引 -->
    <update id="revokeAllUserRoles">
        UPDATE t_user_role
        SET status = 'revoked', 
            revoke_time = NOW(), 
            revoke_by = #{revokeBy},
            update_time = NOW()
        WHERE user_id = #{userId} 
          AND status = 'active'
    </update>

    <!-- 批量检查用户角色 - 使用uk_user_role复合唯一索引 -->
    <select id="batchCheckUserRoles" resultType="map">
        SELECT role, COUNT(*) > 0 as hasRole
        FROM t_user_role
        WHERE user_id = #{userId}
          AND role IN
        <foreach item="role" collection="roles" open="(" separator="," close=")">
            #{role}
        </foreach>
        AND status = 'active'
        AND (expire_time IS NULL OR expire_time > NOW())
        GROUP BY role
    </select>

    <!-- 获取角色用户数统计 -->
    <select id="getRoleUserCountStatistics" resultType="map">
        SELECT role, COUNT(DISTINCT user_id) as userCount
        FROM t_user_role
        WHERE status = 'active'
          AND (expire_time IS NULL OR expire_time > NOW())
        GROUP BY role
        ORDER BY userCount DESC
    </select>

    <!-- 根据角色批量更新过期时间 -->
    <update id="batchUpdateExpireTimeByRole">
        UPDATE t_user_role
        SET expire_time = #{newExpireTime}, update_time = NOW()
        WHERE role = #{role}
          AND status = 'active'
          AND user_id IN
        <foreach item="userId" collection="userIds" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </update>

    <!-- 批量更新过期角色状态 -->
    <update id="batchUpdateExpiredRoles">
        UPDATE t_user_role
        SET status = 'expired', update_time = NOW()
        WHERE status = 'active'
          AND expire_time IS NOT NULL
          AND expire_time &lt;= NOW()
    </update>

    <!-- 删除角色记录 -->
    <delete id="deleteById">
        DELETE FROM t_user_role
        WHERE id = #{id}
    </delete>

    <!-- 删除用户所有角色记录 -->
    <delete id="deleteAllUserRoles">
        DELETE FROM t_user_role
        WHERE user_id = #{userId}
    </delete>

</mapper>
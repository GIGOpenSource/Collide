<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gig.collide.users.infrastructure.mapper.UserCoreMapper">

    <!-- 用户核心表基础字段映射 - 6表架构 -->
    <sql id="baseColumns">
        id, username, email, phone, password_hash, status, invite_code, inviter_id, create_time, update_time
    </sql>

    <!-- 根据ID查询用户核心信息 - 使用主键索引 -->
    <select id="findById" parameterType="long" resultType="com.gig.collide.users.domain.entity.UserCore">
        SELECT <include refid="baseColumns" />
        FROM t_user
        WHERE id = #{id} AND status = 1
    </select>

    <!-- 根据用户名查询用户核心信息 - 使用uk_username唯一索引 -->
    <select id="findByUsername" parameterType="string" resultType="com.gig.collide.users.domain.entity.UserCore">
        SELECT <include refid="baseColumns" />
        FROM t_user
        WHERE username = #{username} AND status = 1
    </select>

    <!-- 根据邮箱查询用户核心信息 - 使用uk_email哈希索引 -->
    <select id="findByEmail" parameterType="string" resultType="com.gig.collide.users.domain.entity.UserCore">
        SELECT <include refid="baseColumns" />
        FROM t_user
        WHERE email = #{email} AND status = 1
    </select>

    <!-- 根据手机号查询用户核心信息 - 使用uk_phone哈希索引 -->
    <select id="findByPhone" parameterType="string" resultType="com.gig.collide.users.domain.entity.UserCore">
        SELECT <include refid="baseColumns" />
        FROM t_user
        WHERE phone = #{phone} AND status = 1
    </select>

    <!-- 检查用户名是否存在 - 使用uk_username唯一索引 -->
    <select id="checkUsernameExists" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM t_user
        WHERE username = #{username} AND status = 1
    </select>

    <!-- 检查邮箱是否存在 - 使用uk_email哈希索引 -->
    <select id="checkEmailExists" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM t_user
        WHERE email = #{email} AND status = 1
    </select>

    <!-- 检查手机号是否存在 - 使用uk_phone哈希索引 -->
    <select id="checkPhoneExists" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM t_user
        WHERE phone = #{phone} AND status = 1
    </select>

    <!-- 分页查询用户核心信息列表 - 优化索引使用 -->
    <select id="findUsersByCondition" resultType="com.gig.collide.users.domain.entity.UserCore">
        SELECT <include refid="baseColumns" />
        FROM t_user
        <where>
            status = 1
            <!-- 优先使用唯一索引 -->
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="email != null and email != ''">
                AND email = #{email}
            </if>
            <if test="phone != null and phone != ''">
                AND phone = #{phone}
            </if>
            <if test="statusValue != null">
                AND status = #{statusValue}
            </if>
            <if test="inviterId != null">
                AND inviter_id = #{inviterId}
            </if>
        </where>
        ORDER BY create_time DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 统计用户核心信息数量 -->
    <select id="countUsersByCondition" resultType="long">
        SELECT COUNT(*)
        FROM t_user
        <where>
            status = 1
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="email != null and email != ''">
                AND email = #{email}
            </if>
            <if test="phone != null and phone != ''">
                AND phone = #{phone}
            </if>
            <if test="statusValue != null">
                AND status = #{statusValue}
            </if>
            <if test="inviterId != null">
                AND inviter_id = #{inviterId}
            </if>
        </where>
    </select>

    <!-- 批量根据ID查询用户核心信息 - 使用主键索引 -->
    <select id="findUsersByIds" resultType="com.gig.collide.users.domain.entity.UserCore">
        SELECT <include refid="baseColumns" />
        FROM t_user
        WHERE id IN
        <foreach item="id" collection="userIds" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND status = 1
        ORDER BY create_time DESC
    </select>

    <!-- 插入用户核心信息 -->
    <insert id="insert" parameterType="com.gig.collide.users.domain.entity.UserCore" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_user (
            username, email, phone, password_hash, status, invite_code, inviter_id, create_time, update_time
        ) VALUES (
            #{username}, #{email}, #{phone}, #{passwordHash}, 
            COALESCE(#{statusValue}, 1), #{inviteCode}, #{inviterId}, NOW(), NOW()
        )
    </insert>

    <!-- 更新用户核心信息 - 使用主键索引 -->
    <update id="updateById" parameterType="com.gig.collide.users.domain.entity.UserCore">
        UPDATE t_user
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="passwordHash != null and passwordHash != ''">password_hash = #{passwordHash},</if>
            <if test="statusValue != null">status = #{statusValue},</if>
            <if test="inviteCode != null and inviteCode != ''">invite_code = #{inviteCode},</if>
            <if test="inviterId != null">inviter_id = #{inviterId},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 更新用户状态 - 使用主键索引 -->
    <update id="updateUserStatus">
        UPDATE t_user
        SET status = #{statusValue}, update_time = NOW()
        WHERE id = #{userId}
    </update>

    <!-- 更新用户密码 - 使用主键索引 -->
    <update id="updatePassword">
        UPDATE t_user
        SET password_hash = #{passwordHash}, update_time = NOW()
        WHERE id = #{userId}
    </update>

    <!-- 获取用户密码哈希值（用于验证） - 使用主键索引 -->
    <select id="getPasswordHash" parameterType="long" resultType="string">
        SELECT password_hash
        FROM t_user
        WHERE id = #{userId} AND status = 1
    </select>

    <!-- 删除用户（逻辑删除） - 使用主键索引 -->
    <update id="deleteById">
        UPDATE t_user
        SET status = 4, update_time = NOW()
        WHERE id = #{userId}
    </update>

</mapper> 